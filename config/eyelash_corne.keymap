#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&lt { tapping-term-ms = <100>; };

/ {
    behaviors {
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    new_behavior: new_behavior {
        compatible = "zmk,behavior-sticky-key";
        label = "NEW_BEHAVIOR";
        bindings = <&kp>;
        #binding-cells = <1>;
        quick-release;
        release-after-ms = <1000>;
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp F13                   &kp Q  &kp W  &kp E     &kp R    &kp T                             &kp UP                &kp Y         &kp U                     &kp I      &kp O         &kp P             &kp BSPC
&new_behavior LEFT_SHIFT  &kp A  &kp S  &kp D     &kp F    &kp G                   &kp LEFT  &kp ENTER  &kp RIGHT  &kp H         &kp N                     &kp K      &kp L         &kp SINGLE_QUOTE  &sl 6
&kp LCTRL                 &kp Z  &kp X  &kp C     &kp V    &kp B      &kp SPACE              &kp DOWN              &kp J         &kp M                     &kp COMMA  &lt 1 PERIOD  &lt 3 SLASH       &mo 2
                                        &kp LGUI  &kp TAB  &kp SPACE                                               &lt 4 RETURN  &new_behavior LEFT_SHIFT  &mo 0
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp N1           &kp N2          &kp N3        &kp N4        &kp N5                                         &mmv MOVE_UP                     &kp N6           &kp N7           &kp N8           &kp N9           &kp N0    &kp BSPC
&trans  &bt BT_CLR_ALL   &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &kp HOME  &kp PG_UP
&trans  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &trans        &trans        &rgb_ug RGB_EFF  &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp END   &kp PG_DN
                                         &trans        &trans        &trans                                                                          &kp INS          &kp DEL          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH   &kp DLLR       &kp PRCNT                            &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&trans  &bt BT_CLR    &mkp LCLK     &mkp MCLK  &mkp RCLK      &mkp MB4             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &out OUT_USB  &out OUT_BLE  &none      &none          &mkp MB5   &trans                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                    &trans     &kp LG(SPACE)  &kp F6                                                                &kp RET    &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp F1      &kp F2     &kp F3       &kp F4     &kp F5                                  &mmv MOVE_UP                     &kp F6       &kp F7     &kp F8       &kp F9      &kp F10          &kp F11
&trans          &trans      &mkp LCLK  &mkp MCLK    &mkp RCLK  &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader  &mkp LCLK  &mkp MCLK    &mkp RCLK   &kp PRINTSCREEN  &kp F12
&trans          &sys_reset  &trans     &bootloader  &trans     &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans       &trans     &bootloader  &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                       &trans       &trans     &trans                                                                   &trans       &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_4 {
            bindings = <
&kp LC(Z)  &kp LC(Y)       &kp HOME      &kp UP_ARROW    &kp END              &kp LC(SLASH)                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans     &kp LEFT_SHIFT  &kp LC(LEFT)  &kp DOWN_ARROW  &kp LC(RIGHT_ARROW)  &kp LC(V)                &trans  &trans  &trans  &trans  &mo 5   &trans  &trans  &trans  &kp LALT
&trans     &trans          &trans        &trans          &kp LC(C)            &trans         &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                         &trans          &trans               &kp F6                                           &trans  &trans  &trans
            >;
        };

        layer_8 {
            bindings = <
&trans  &trans          &kp LC(LS(TAB))  &kp UP_ARROW    &kp LC(TAB)      &trans                           &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_SHIFT  &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LG(SLASH)            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans           &kp LG(C)       &kp LG(V)        &trans         &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                         &trans          &trans           &kp BACKSPACE                                    &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&kp BACKSLASH  &kp DOLLAR  &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp LEFT_BRACE     &kp SLASH                      &trans          &trans  &trans  &trans  &trans  &trans  &trans
&kp EXCL       &kp COMMA   &kp PERIOD        &kp LESS_THAN         &kp UNDER          &kp MINUS              &trans  &trans  &trans  &trans  &sl 7   &trans  &trans  &trans  &trans
&trans         &trans      &trans            &kp POUND             &kp DOUBLE_QUOTES  &kp PERCENT  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                             &trans                &trans             &kp F6                                         &mo 9   &trans  &trans
            >;
        };

        layer_9 {
            bindings = <
&kp PIPE      &kp AMPERSAND  &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE   &kp ASTRK                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&kp QUESTION  &kp SEMI       &kp COLON          &kp GREATER_THAN       &kp EQUAL         &kp PLUS             &trans  &trans  &trans  &trans  &mo 8   &trans  &trans  &trans  &trans
&trans        &trans         &trans             &kp AT                 &kp SINGLE_QUOTE  &kp CARET  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                                &trans                 &trans            &kp F6                                       &mo 9   &trans  &trans
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans     &kp LG(W)         &kp LG(T)  &kp LG(R)          &trans                       &trans          &trans         &trans  &kp F8  &kp F9  &trans  &trans
&trans  &kp LG(L)  &kp LG(LA(LEFT))  &kp LG(D)  &kp RG(LA(RIGHT))  &kp LG(F)            &trans  &trans  &trans  &kp F10        &kp F7  &trans  &trans  &trans  &kp ESCAPE
&trans  &trans     &trans            &trans     &trans             &trans     &trans            &trans          &trans         &trans  &trans  &trans  &trans  &trans
                                     &trans     &trans             &trans                                       &kp LG(SPACE)  &trans  &trans
            >;
        };

        layer_10 {
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4     &kp N5                     &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N6  &kp N7  &kp N8  &kp N9     &kp N0             &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans     &trans   &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &kp COMMA  &kp DOT                                    &trans  &trans  &trans
            >;
        };
    };
};
